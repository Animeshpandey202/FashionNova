{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { CartSlice } from \"./Slices/CartSlice\";\nimport { loadState, saveState } from \"./localStorage\"; // Import your localStorage utility\n\n// Load persisted state from localStorage\nconst persistedState = loadState();\nexport const store = configureStore({\n  reducer: {\n    cart: CartSlice.reducer\n  },\n  preloadedState: persistedState // Set the preloaded state\n});\n\n// Subscribe to store changes to save the state\nstore.subscribe(() => {\n  saveState(store.getState());\n});","map":{"version":3,"names":["configureStore","CartSlice","loadState","saveState","persistedState","store","reducer","cart","preloadedState","subscribe","getState"],"sources":["C:/Users/techy/Desktop/starter 4/starter 4/src/redux/Store.js"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport { CartSlice } from \"./Slices/CartSlice\";\nimport { loadState, saveState } from \"./localStorage\"; // Import your localStorage utility\n\n// Load persisted state from localStorage\nconst persistedState = loadState();\n\nexport const store = configureStore({\n  reducer: {\n    cart: CartSlice.reducer,\n  },\n  preloadedState: persistedState, // Set the preloaded state\n});\n\n// Subscribe to store changes to save the state\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB,CAAC,CAAC;;AAEvD;AACA,MAAMC,cAAc,GAAGF,SAAS,EAAE;AAElC,OAAO,MAAMG,KAAK,GAAGL,cAAc,CAAC;EAClCM,OAAO,EAAE;IACPC,IAAI,EAAEN,SAAS,CAACK;EAClB,CAAC;EACDE,cAAc,EAAEJ,cAAc,CAAE;AAClC,CAAC,CAAC;;AAEF;AACAC,KAAK,CAACI,SAAS,CAAC,MAAM;EACpBN,SAAS,CAACE,KAAK,CAACK,QAAQ,EAAE,CAAC;AAC7B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}